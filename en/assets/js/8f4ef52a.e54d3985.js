"use strict";(self.webpackChunkpromptgineering=self.webpackChunkpromptgineering||[]).push([[6448],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(r),f=o,m=u["".concat(p,".").concat(f)]||u[f]||d[f]||a;return r?n.createElement(m,i(i({ref:t},l),{},{components:r})):n.createElement(m,i({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},11303:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var n=r(87462),o=(r(67294),r(3905));const a=r.p+"assets/images/soaked-8cfdef44ff21c683679721d2a4a9fd27.png",i={sidebar_position:3},s="Soaked",p={unversionedId:"tooling/IDEs/soaked",id:"tooling/IDEs/soaked",title:"Soaked",description:"Soaked is a prompt engineering IDE that",source:"@site/docs/tooling/IDEs/soaked.md",sourceDirName:"tooling/IDEs",slug:"/tooling/IDEs/soaked",permalink:"/en/docs/tooling/IDEs/soaked",draft:!1,editUrl:"https://github.com/trigaten/promptgineering/tree/v1.2.3/docs/tooling/IDEs/soaked.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Dust",permalink:"/en/docs/tooling/IDEs/dust"},next:{title:"Dyno",permalink:"/en/docs/tooling/IDEs/dyno"}},c={},l=[{value:"Features",id:"features",level:2}],u={toc:l},d="wrapper";function f(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"soaked"},"Soaked"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://soaked-prompts.vercel.app"},"Soaked")," is a prompt engineering IDE that\nfocuses on visual prompt chaining with a graphical interface. It is currently in\nbeta, but active development has ceased."),(0,o.kt)("div",{style:{textAlign:"center"}},(0,o.kt)("img",{src:a,style:{width:"750px"}})),(0,o.kt)("h2",{id:"features"},"Features"),(0,o.kt)("p",null,"Soaked provides a graphical interface for chaining prompts together,\nwhere you can easily see how different components flow together. It also\nprovides a lower level prompt view with the option to generate multiple\ncompletions at once. It also provides a cost estimate for completions. It currently supports GPT3 and requires an OpenAI key to use."))}f.isMDXComponent=!0}}]);